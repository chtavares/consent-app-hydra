--------------------------------------------------------------------------------------------------------------------------------------------------------
hydra v0.11.12

HTTP

docker network create hydraguide

//start the postgres
docker run \
  --network hydraguide \
  --name ory-hydra-example--postgres \
  -e POSTGRES_USER=hydra \
  -e POSTGRES_PASSWORD=secret \
  -e POSTGRES_DB=hydra \
  -d --rm postgres:9.6

export SYSTEM_SECRET='this_needs_to_be_the_same_always_and_also_very_$3cuR3-._'
export DATABASE_URL=postgres://hydra:secret@ory-hydra-example--postgres:5432/hydra?sslmode=disable

// migrate the database
docker run -it --rm \
  --network hydraguide \
  oryd/hydra \
  migrate sql $DATABASE_URL
------------------------------------------------------------------------------------------------------------------------------------------------------------

// run the hydra server http --force-http
docker run -it --rm \
  --name ory-hydra-example--hydra \
  --network hydraguide \
  -p 9000:4444 \
  -e SYSTEM_SECRET=$SYSTEM_SECRET \
  -e DATABASE_URL=$DATABASE_URL \
  -e ISSUER=http://localhost:9000/ \
  -e CONSENT_URL=http://localhost:3000/consent \
  -e FORCE_ROOT_CLIENT_CREDENTIALS=admin:demo-password \
  hydra:local

// generate token and verify
docker run --rm -it \
  -e CLUSTER_URL=http://ory-hydra-example--hydra:4444 \
  -e CLIENT_ID=admin \
  -e CLIENT_SECRET=demo-password \
  --network hydraguide \
  hydra:local \
  token client --skip-tls-verify

docker run --rm -it \
  -e CLUSTER_URL=http://ory-hydra-example--hydra:4444 \
  -e CLIENT_ID=admin \
  -e CLIENT_SECRET=demo-password \
  -e TOKEN=$token \
  --network hydraguide \
  hydra:local \
  token validate --skip-tls-verify

//create client to hydra
  docker run --rm -it \
  -e CLUSTER_URL=http://ory-hydra-example--hydra:4444 \
  -e CLIENT_ID=admin \
  -e CLIENT_SECRET=demo-password \
  --network hydraguide \
  hydra:local \
   clients create --skip-tls-verify \
    --id test11 \
    --secret user_secret \
    --name "Consent App Client" \
    --grant-types client_credentials,authorization_code,refresh_token,implicit \
    --response-types token,code,id_token \
    --allowed-scopes hydra.consent,openid,offline,hydra.clients \
    --callbacks http://localhost:1323/callback

  docker run --rm -it \
  -e CLUSTER_URL=http://ory-hydra-example--hydra:4444 \
  -e CLIENT_ID=admin \
  -e CLIENT_SECRET=demo-password \
  --network hydraguide \
  hydra:local \
   clients create --skip-tls-verify \
    --id test \
    --secret user_secret \
    --grant-types client_credentials \
    --response-types code \
    --allowed-scopes offline

-----------------------------------------------------------------------------------------------------------------------------------------------------------
HTTP hydra v1.0.0-beta9

 docker run -it --rm \
  --name ory-hydra-example \
  --network hydraguide \
  -p 9000:4444 \
  -p 9001:4445 \
  -e SYSTEM_SECRET=$SYSTEM_SECRET \
  -e DATABASE_URL=$DATABASE_URL \
  -e OAUTH2_ISSUER_URL=http://localhost:9000/ \
  -e OAUTH2_CONSENT_URL=http://localhost:3000/consent \
  -e OAUTH2_LOGIN_URL=http://localhost:3000/login \
  oryd/hydra:v1.0.0-beta.9 serve all --dangerous-force-http

docker run --rm -it \
   -e HYDRA_ADMIN_URL=http://ory-hydra-example:4445 \
   --network hydraguide \
   oryd/hydra:v1.0.0-beta.9 \
   clients create --skip-tls-verify \
     --id user_id \
     --secret user_password \
     --grant-types authorization_code,refresh_token,client_credentials,implicit \
     --response-types token,code,id_token \
     --scope openid,offline,photos.read \
     --callbacks http://localhost:1323/callback


  docker run --rm -it \
  -e HYDRA_ADMIN_URL=http://ory-hydra-example:4445 \
  --network hydraguide \
  oryd/hydra:v1.0.0-beta.9 \
   clients create --skip-tls-verify \
    --id userid \
    --secret userpassword \
    --grant-types client_credentials,authorization_code,refresh_token,implicit \
    --response-types token,code,id_token \
    --scope hydra.consent,openid,offline,hydra.clients \
    --callbacks http://localhost:1323/callback